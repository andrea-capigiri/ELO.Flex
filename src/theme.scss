@use "sass:map";
@use "@angular/material" as mat;
@use "@material/theme/theme-color" as mdc-theme-color;

@use "./_shared/@elo/scss/grid.scss";
@use "./_shared/@elo/scss/material-override.scss";
@use "./_shared/@elo/scss/typography.scss";

@include mat.core();

@import "@angular/material/prebuilt-themes/indigo-pink.css";
@import "@angular/material/prebuilt-themes/purple-green.css";

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
//@include mat.all-legacy-component-typographies();
//@include mat.legacy-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$elo-app-primary: mat.define-palette(mat.$indigo-palette);
//$elo-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
//
//// The warn palette is optional (defaults to red).
//$elo-app-warn: mat.define-palette(mat.$red-palette);
//
//// Create the theme object. A theme consists of configurations for individual
//// theming systems such as "color" or "typography".
//$elo-app-theme: mat.define-light-theme(
//	(
//		color: (
//			primary: $elo-app-primary,
//			accent: $elo-app-accent,
//			warn: $elo-app-warn,
//		),
//	)
//);
//
//// Include theme styles for core and each component used in your app.
//// Alternatively, you can import and @include the theme mixins for each component
//// that you are using.
//@include mat.all-legacy-component-themes($elo-app-theme);

/* You can add global styles to this file, and also import other style files */

$theme: null;

// LIGHT THEME #############################################################

body[data-theme="light"] {
	$primary: mat.define-palette(mat.$indigo-palette);
	$accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
	$warn: mat.define-palette(mat.$blue-grey-palette, A200, A100, A400);

	$theme: mat.define-light-theme(
		(
			color: (
				primary: $primary,
				accent: $accent,
				warn: $warn,
			),
			density: -1,
			typography: mat.define-typography-config(),
		)
	);
	@include mat.form-field-density(-2);
	@include mat.all-component-colors($theme);
	//@include mat.all-legacy-component-themes($theme);

	color: mat.get-theme-color($theme, foreground, card);
	background-color: mat.get-theme-color($theme, background, card);

	.card {
		background-color: mat.get-theme-color($theme, background, card);
	}

	a {
		color: mat.get-theme-color($theme, foreground, text);
	}
}

// DARK THEME ##############################################################

body[data-theme="dark"] {
	$primary: mat.define-palette(mat.$blue-grey-palette);
	$accent: mat.define-palette(mat.$indigo-palette, A200, A100, A400);
	$warn: mat.define-palette(mat.$pink-palette, A200, A100, A400);

	$theme: mat.define-dark-theme(
		(
			color: (
				primary: $primary,
				accent: $accent,
				warn: $warn,
			),
			//color: (
			//	primary: mat.define-palette(mat.$pink-palette),
			//	accent: mat.define-palette(mat.$blue-grey-palette),
			//),
			density: -1,
			typography: mat.define-typography-config(),
		)
	);
	@include mat.form-field-density(-2);
	@include mat.all-component-colors($theme);
	//@include mat.all-legacy-component-themes($theme);

	color: mat.get-theme-color($theme, foreground, card);
	background-color: mat.get-theme-color($theme, background, card);
	//background-color: mat.get-theme-color($theme, background);

	.card {
		background-color: mat.get-theme-color($theme, background, card);
	}

	a {
		color: mat.get-theme-color($theme, foreground, text);
	}
}

html,
body {
	margin: 0;
	padding: 0;
}

// GAP #####################################################################

$spacer: 1rem;
$spacers: (
	0: 0,
	1: $spacer * 0.25,
	2: $spacer * 0.5,
	3: $spacer,
	4: $spacer * 1.5,
	5: $spacer * 3,
);

@each $i, $space in $spacers {
	.d-flex.flex-gap-#{$i} {
		gap: #{$space} !important;
	}
}
